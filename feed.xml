<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2019-09-16T15:26:50+02:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Luca Bozzetto</title><subtitle>Studente di Informatica presso Università Ca'Foscari di Venezia. Appassionato di Infosec e Web  Development. Pubblico sul mio blog articoli a tema IT e non solo.</subtitle><entry><title type="html">MongoDB e Mongoose</title><link href="http://localhost:4000/mongodb-e-mongoose/" rel="alternate" type="text/html" title="MongoDB e Mongoose" /><published>2019-07-05T15:00:00+02:00</published><updated>2019-07-05T15:00:00+02:00</updated><id>http://localhost:4000/mongodb-e-mongoose</id><content type="html" xml:base="http://localhost:4000/mongodb-e-mongoose/">&lt;blockquote&gt;
  &lt;p&gt;Questo articolo fa parte della guida allo sviluppo di una SPA con Angular. Se ti sei perso gli articoli prima &lt;a href=&quot;https://lucabozzetto.github.io/realizzare-una-single-page-application-con-angular-e-nodejs/&quot;&gt;clicca qui&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Dopo aver progettato le nostre API è arrivato finalmente il momento di sviluppare il nostro backend. &lt;br /&gt;
Avremo sicuramente bisogno di memorizzare i nostri dati in un database e &lt;a href=&quot;https://www.mongodb.com&quot;&gt;MongoDB&lt;/a&gt; può fare proprio al caso nostro! &lt;br /&gt;
MongoDB infatti è un database non relazione che si intregra particolarmente bene con i linguaggi dinamici come javascript e non richiede una progettazione a priori del database. &lt;br /&gt;
Il database è infatti orientato ai documenti e non alle relazioni tra i dati. Inoltre lo schema dinamico (schema-less) ci permette di salvare dati anche non omogenei (con ad esempio un numero di colonne diverso tra loro) nella stessa collezione!&lt;br /&gt;
Tuttavia utilizzare MongoDB direttamente insieme a Node e Express può rivelarsi un’operazione lunga e poco simpatica. Ecco quindi che in nostro aiuto viene &lt;a href=&quot;https://mongoosejs.com&quot;&gt;Mongoose&lt;/a&gt;.&lt;br /&gt;
Mongoose è una libreria di Object Document Mapping ( ODM ) che permette di definire lo schema dei documenti attraverso oggetti Javascript per effettuare il mapping automatico da e verso il database.&lt;br /&gt;
Grazie a questa comoda libreria andremo a lavorare su oggetti Javascript come siamo abituati ma quest’ultimi ci metterano a disposizione numerosi metodi per salvare e/o effetuare altre operazioni sul nostro database.&lt;br /&gt;
Per essere più chiaro eccovi qualche esempio su come lavorare con mongoose.&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;collegamento-al-database&quot;&gt;Collegamento al database&lt;/h2&gt;
&lt;p&gt;Il mio consiglio è quello di realizzare nella vostra cartella dei modelli un file chiamato db.js dove andrete a definire il setup della connessione al database e importerete i vari schemi di Mongoose di cui a breve di parlerò. &lt;br /&gt;
Un esempio di come ho realizzato il mio è il seguente:&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mongoose&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'mongoose'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dbURI&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'localhost'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;NODE_ENV&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'production'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;dbURI&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;MONGODB_URI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;mongoose&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dbURI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;useNewUrlParser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;mongoose&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'useCreateIndex'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;mongoose&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'connected'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`Mongoose connected to &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dbURI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;mongoose&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'error'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Mongoose connection error:'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;mongoose&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'disconnected'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Mongoose disconnected'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;gracefulShutdown&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;mongoose&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;connection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`Mongoose disconnected through &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// For nodemon restarts&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;once&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'SIGUSR2'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;gracefulShutdown&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'nodemon restart'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;kill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'SIGUSR2'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// For app termination&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'SIGINT'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;gracefulShutdown&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'app termination'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// For Heroku app termination&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'SIGTERM'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;gracefulShutdown&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Heroku app shutdown'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'./users'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Come potete vedere questo file si limita in sostanza a stabilire una connessione con il nostro database e a terminare correttamente quest’ultima in caso di arresto dell’applicazione in maniera non prevista. &lt;br /&gt;
L’ultima riga ossia &lt;code class=&quot;highlighter-rouge&quot;&gt;require('./users');&lt;/code&gt; ci lascia intendere che stiamo effettuando l’import di un ulteriore modello. &lt;br /&gt;
In questo modello come vedremo tra poco ho definito il mio schema di Mongoose.&lt;/p&gt;

&lt;h2 id=&quot;schemas-models-e-loro-utilizzo&quot;&gt;Schemas, Models e loro utilizzo&lt;/h2&gt;
&lt;p&gt;La vera chicca di mongoose sono gli schemi e i modelli. &lt;br /&gt;
Con i primi andiamo a definire la struttura dei documenti di una determinata collezione. &lt;br /&gt;
Questo significa che strutturiamo un minimo i nostri dati per avere una maggiore consistenza. &lt;br /&gt;
I Modelli invece non sono altro che delle funzioni (costruttori)  che permettono di costruire oggetti (basandoci su un determinato schema definito in precedenza) e di memorizzarli nella rispettiva collezione del database. &lt;br /&gt;
Una volta definito uno schema e creato un modello possiamo utilizzare quest’ultimo per:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Effettuare query nel database eg &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;model&amp;gt;.find({})&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Creare un nuovo oggetto eg &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;model&amp;gt;.create({obj})&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Rimuovere oggetti eg &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;model&amp;gt;.remove({})&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ecco per esempio come ho definito lo schema per i miei utenti su EasyRestaurant:&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mongoose&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'mongoose'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;crypto&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'crypto'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;jwt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'jsonwebtoken'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// This obj describes the various roles the employees can assume&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Role&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;freeze&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Waiter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'waiter'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Bar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'bar'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Cook&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'cook'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;Cashier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'cashier'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;userSchema&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mongoose&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Schema&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;unique&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;lowercase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;minLength&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;maxLenght&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;surname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;role&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;enum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Role&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;salt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;admin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Boolean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;validate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;role&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Role&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Cashier&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;role&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Role&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Cashier&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;required&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;hired&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;wage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;userSchema&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;methods&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setPassword&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;salt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;crypto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;randomBytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'hex'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;crypto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pbkdf2Sync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;salt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'sha512'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'hex'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;userSchema&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;methods&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;validatePassword&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;hash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;crypto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pbkdf2Sync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;salt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'sha512'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'hex'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;assign&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;userSchema&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;statics&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;Role&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;mongoose&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'User'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;userSchema&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;A questo punto sarà evidente come definire uno schema non è molto di più che definire la tipologia di dati accettati con qualche eventuale ulteriore validazione e/o valore di default. &lt;br /&gt;
Ci tengo a far notare come uno schema possa possedere dei metodi e dei valori statici. &lt;br /&gt;
Un chiaro esempio sono i metodi set e validePassword che per altro come da buona abitudine non salvano le password in chiaro ma una loro versione criptata. &lt;br /&gt;
L’ultima riga ci permette di esportare il modello assegnandovi lo schema appena definito. &lt;br /&gt;
Ecco quindi che potremmo utilizzarlo nella nostra applicazione in maniera semplice:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mongoose&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'mongoose'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mongoose&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'User'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;username&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Johndoe&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setPassword&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;secret&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;John&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;surname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Doe&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;role&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;waiter&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;c1&quot;&gt;// Handle the error&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;c1&quot;&gt;// The user has been created in our database!&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Oppure possiamo effettuare delle query:&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mongoose&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'mongoose'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mongoose&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'User'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;User&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;findOne&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;johndoe&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;// The user was not found in our database&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
		
		&lt;span class=&quot;c1&quot;&gt;// user will now contain the required data&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// johndoe&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;L’articolo di oggi è stato un pò più lungo del solito ma finalmente abbiamo visto qualche riga di codice per capire come funzionano i vari strumenti che possono farci penare un pochino meno in fase di sviluppo. &lt;br /&gt;
La prossima volta daremo un occhiata a Socket.io per gestire i websocket e alla soluzione che ho utilizzato nello specifico nel mio progetto. &lt;br /&gt;&lt;/p&gt;</content><author><name></name></author><category term="Italiano" /><category term="Angular" /><category term="Guide" /><summary type="html">Dopo aver progettato le nostre API è arrivato finalmente il momento di sviluppare il nostro backend. Una rapida occhiata a MongoDB e MongooseJS ci aiuterà a gestire in maniera rapida le nostre collezioni di dati e le interazioni con un database non relazionale.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/mongodb.png" /></entry><entry><title type="html">Mockup interfacce e definizione API</title><link href="http://localhost:4000/mockup-interfacce-e-definizione-api/" rel="alternate" type="text/html" title="Mockup interfacce e definizione API" /><published>2019-06-05T14:59:39+02:00</published><updated>2019-06-05T14:59:39+02:00</updated><id>http://localhost:4000/mockup-interfacce-e-definizione-api</id><content type="html" xml:base="http://localhost:4000/mockup-interfacce-e-definizione-api/">&lt;blockquote&gt;
  &lt;p&gt;Questo articolo fa parte della guida allo sviluppo di una SPA con Angular. Se ti sei perso gli articoli prima &lt;a href=&quot;https://lucabozzetto.github.io/realizzare-una-single-page-application-con-angular-e-nodejs/&quot;&gt;clicca qui&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Prima di partire con il coding vero e proprio ho pensato fosse una buona idea definire con precisione l’applicazione sia a livello di funzionalità che a livello di interazioni / usabilità. &lt;br /&gt;
Per questo come prima cosa ho provveduto a studiare un mockup ( &lt;a href=&quot;https://ibb.co/sCN1gKk&quot;&gt;disponibile qui&lt;/a&gt; ) delle possibili interazioni ed interfacce in modo tale da avere più chiaro in testa il possibile funzionamento dell’applicazione. Successivamente ho provveduto a definire le risorse e i relativi endpoints. &lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;api-in-stile-restful&quot;&gt;API in stile RESTful&lt;/h2&gt;
&lt;p&gt;Con l’acronimo API si intende Application Programming Interface e non è altro che la creazione di una serie di endpoint (delle URL) che rispondono alle richieste fatte da uno sviluppatore.
Praticamente una raccolta di metodi che ci permettono di collegare librerie o applicazioni presenti su diversi sistemi. &lt;br /&gt;
Il significato dell’acronimo REST è invece REpresentational State Transfer, ovvero una rappresentazione del trasferimento di stato di un determinato dato. REST non è una tecnologia, piuttosto descrive una serie di linee guida e di approcci che definiscono lo stile con cui i dati vengono trasmessi.&lt;br /&gt;
Ora che abbiamo finito con gli acronimi possiamo andare a vedere davvero cosa significa realizzare un set di API RESTful.&lt;br /&gt;
Oramai saper definire API RESTful è un prerequisito per chiunque voglia lavorare su un backend web.&lt;br /&gt;
Tuttavia non esiste uno standard per la realizzazione di una API ma solamente una seria di &lt;strong&gt;linee guida&lt;/strong&gt; che se rispettate garantiscono un buon risultato finale:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Consistenza all’interno dell’intera API&lt;/li&gt;
  &lt;li&gt;Stateless ovvero non esistono sessioni nel nostro server e per tanto non salviamo informazioni tra una richiesta e l’altra. Di fatto ogni richiesta è una comunicazione a se stante e il server non conserva memoria di eventuali richiesta precedenti arrivando a non tenere traccia nemmeno delle informazioni di login.&lt;/li&gt;
  &lt;li&gt;Utilizzo degli status code HTTP per velocizzare e facilitare le risposte e la loro leggibilità.&lt;/li&gt;
  &lt;li&gt;Definizione di URL endpoint che seguono una determinata logica&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Accopiati agli endpoint si utilizzano i metodi HTTP che hanno lo scopo di rappresentare le azioni che intendiamo compiere su una determinata risorsa:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;GET&lt;/strong&gt;: utililizzato come il nome suggerisce quando desideriamo ottenere una risorsa o set di dati.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;POST&lt;/strong&gt;: da usare quando si aggiungono nuovi elementi di un determinato tipo di risorsa.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;DELETE&lt;/strong&gt;: neanche a dirlo questo metodo lo si utilizza per eliminare dei dati.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;PUT&lt;/strong&gt;: Da utilizzare quando si desidera effetuare l’update sostituendo del tutto una risorsa. Si può anche utilizzare per sostituire solo in parte un dato ma per questo scopo è più indicato il prossimo metodo.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;PATCH&lt;/strong&gt;: Come appena spiegato PATCH è da utilizzare quando si vuole effetuare l’update di una parte di una risorsa, modificandone alcune delle informazioni.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Fatta questa breve parentesi di introduzione c’è da dire che realizzare una API in stile RESTful richiede un minimo di pratica.&lt;br /&gt;
Per sperimentare facilmente senza dover per forza scrivere nel frattempo l’intero codice per il vostro backend vi suggerisco di utilizzare &lt;a href=&quot;https://www.getpostman.com/&quot;&gt;Postman&lt;/a&gt;, una magnifica applicazione che vi permetterà di realizzare e testare le vostre API in maniera semplice e veloce.&lt;br /&gt;
Io l’ho inoltre usato per testare le API man mano che scrivevo il codice per il mio server, velocizzando di molto i miei tempi di sviluppo e test.&lt;br /&gt;
Tra le numerose funzionalità che Postman offre vi è inoltre la possibilità di documentare in maniera elegamente il proprio set di API.  Una buona documentazione è infatti importante quasi tanto quanto un buon set di API e in questo Postman vi faciliterà non poco il compito, fornendovi anche qualche utile spunto.&lt;br /&gt;
Potete dare un occhiata alle API e alla loro documentazione per EasyRestaurant &lt;a href=&quot;https://documenter.getpostman.com/view/6803722/SVYxnF9P?version=latest&quot;&gt;direttamente qui&lt;/a&gt; ma vi suggerisco di provare prima a realizzare un vostro set di endpoints e di sperimentare con Postman prima di sbirciare come ho risolto io il tutto.&lt;/p&gt;

&lt;p&gt;Nel prossimo articolo daremo un’occhiata veloce a come approcciare lo sviluppo di un backend con NodeJS e le tecnologie che ho utilizzato per rendere lo sviluppo un pochino più veloce e semplice.&lt;/p&gt;</content><author><name></name></author><category term="Italiano" /><category term="Angular" /><category term="Guide" /><summary type="html">Scopriamo insieme cosa significa progettare un set di API in stile RESTful e come approcciare al meglio lo sviluppo di un backend. Gli strumenti che ci possono facilitare il compito e cosa dobbiamo tenere in considerazione durante la fase di progettazione e definizione degli endpoints.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/RESTfil-API.png" /></entry><entry><title type="html">L’applicazione: EasyRestaurant</title><link href="http://localhost:4000/lapplicazione-easyrestaurant/" rel="alternate" type="text/html" title="L'applicazione: EasyRestaurant" /><published>2019-05-05T09:30:00+02:00</published><updated>2019-05-05T09:30:00+02:00</updated><id>http://localhost:4000/lapplicazione-easyrestaurant</id><content type="html" xml:base="http://localhost:4000/lapplicazione-easyrestaurant/">&lt;blockquote&gt;
  &lt;p&gt;Questo articolo fa parte della guida allo sviluppo di una SPA con Angular. Se ti sei perso gli articoli prima &lt;a href=&quot;https://lucabozzetto.github.io/realizzare-una-single-page-application-con-angular-e-nodejs/&quot;&gt;clicca qui&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In questo articolo non andremo ancora a toccare con mano Angular e mi limiterò nello specifico a spiegare che progetto andremo a realizzare. &lt;br /&gt;
Anche se è vero che il progetto che svilupperò non è particolarmente complesso, ritengo non sia quasi mai raccomandabile buttarsi a capofitto nello scrivere codice. Un’attenta analisi ci risparmierà di dover riscrivere tutto da capo in seguito!&lt;/p&gt;

&lt;p&gt;L’idea base è quella di creare un’app per la gestione di un ristorante. Man mano che procederò con lo sviluppo dell’applicazione illusterò i vari concetti chiave utilizzati.&lt;br /&gt;
L’applicazione gestisce sostanzialmente le attività di 4 diversi ruoli di dipendenti: Camerieri, Cuochi, Baristi e Cassieri.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Camerieri&lt;/strong&gt;
Ciascun cameriere porta con sé un dispositivo mobile (smartphone o tablet) con cui può prendere ordinazioni ai tavoli.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cuochi&lt;/strong&gt;
I cuochi o pizzaioli vengono notificati in tempo reale sul cibo ordinato da ciascun tavolo mediante i camerieri.&lt;br /&gt;
Gli ordini sono inseriti in una coda e raggruppati per tavolo e per tempo di realizzazione di modo tale che la preparazione dei piatti per uno stesso tavolo possano essere serviti contemporaneamente. &lt;br /&gt;
I cuochi, attraverso la loro interfaccia, possono notificare il sistema dell’inizio e la fine di una preparazione.&lt;br /&gt;
Quando le preparazioni di un determinato tavolo sono ultimate, il cameriere associato a quel tavolo viene notificato di tale evento e può quindi procedere al servizio.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Baristi&lt;/strong&gt;
I baristi sono concettualmente simili ai cuochi ma si occupano solo delle bibite.&lt;br /&gt;
I baristi ricevono notifica delle ordinazioni di ciascun tavolo e inviano notifica di fine preparazione ai camerieri quando il “vassoio” di bibite di un determinato tavolo è pronto per il servizio&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cassa&lt;/strong&gt;
L’addetto alla cassa può “chiudere il conto” di un tavolo producendo uno scontrino con il totale da pagare.&lt;br /&gt;
La cassa ha inoltre visione delle statistiche sullo stato degli ordini, in particolare:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Quali tavoli hanno ordini in fase di preparazione&lt;/li&gt;
  &lt;li&gt;Quale cameriere è associato a ciascun tavolo&lt;/li&gt;
  &lt;li&gt;Quali tavoli sono liberi/occupati&lt;/li&gt;
  &lt;li&gt;Quanto è lunga la coda di preparazioni della cucina
Infine, la cassa può conoscere il guadagno totale di una giornata.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Il sistema dovrà implementare le seguenti funzionalità:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Gestione degli utenti&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;Registrazione di nuovi utenti con i seguenti ruoli: camerieri, cuochi, baristi e cassa. Il ruolo “cassa” gode del ruolo di amministratore&lt;/li&gt;
      &lt;li&gt;Possibilità di cancellazione di utenti esistenti da parte degli amministratori&lt;/li&gt;
      &lt;li&gt;Login degli utenti con le proprie credenziali di accesso. Tutte le funzionalità del sistema sono accessibili previo login obbligatorio&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Gestione dei tavoli e ordini&lt;/strong&gt; (solo per camerieri)
    &lt;ul&gt;
      &lt;li&gt;Modifica dello stato di un tavolo da libero a occupato da un certo numero di clienti. Il numero di clienti deve essere compatibile con i posti a sedere al tavolo&lt;/li&gt;
      &lt;li&gt;Aggiunta di una o più ordinazioni di piatti per un determinato tavolo. Quando le ordinazioni sono ultimate queste vengono notificate ai cuochi&lt;/li&gt;
      &lt;li&gt;Aggiunta di una o più ordinazioni di bevande per un determinato tavolo. Quando le ordinazioni sono ultimate queste vengono notificate ai camerieri&lt;/li&gt;
      &lt;li&gt;Notifica al cameriere addetto ad un tavolo dei piatti e bevande pronte da servire per quel tavolo&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Gestione della coda di preparazione dei cibi&lt;/strong&gt; (solo cuochi)
    &lt;ul&gt;
      &lt;li&gt;Visualizzazione in tempo reale della coda di preparazione dei cibi per ciascun tavolo. 
Si assuma per semplicità che vi sia un’unica coda di preparazione e che ciascun tavolo venga servito con logica FIFO. 
I cibi da realizzare vanno ordinati per tempo di preparazione, dal più lungo al più breve. 
Il cuoco, per ciascun cibo, può notificare al sistema l’inizio e la fine della preparazione. 
Quando tutti i cibi di un determinato tavolo sono stati preparati, il cameriere addetto a quel tavolo viene notificato che può procedere al servizio.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Gestione della coda di preparazione delle bevande&lt;/strong&gt; (solo baristi)
    &lt;ul&gt;
      &lt;li&gt;Visualizzazione in tempo reale della coda di preparazione bevande per ciascun tavolo. 
Quando il vassoio delle bevande è pronto il barista notifica tale evento al sistema che provvederà ad inoltrarlo al cameriere addetto a quel determinato tavolo (il funzionamento è analogo a quanto avviene per i cuochi)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Gestione cassa&lt;/strong&gt; (solo per cassieri):
    &lt;ul&gt;
      &lt;li&gt;Calcolo del conto totale di un tavolo e creazione dello scontrino con la lista delle ordinazioni consumate. Il tavolo passa quindi dallo stato occupato allo stato libero e può essere riutilizzato dai camerieri&lt;/li&gt;
      &lt;li&gt;Visualizzazione dei tavoli liberi e occupati&lt;/li&gt;
      &lt;li&gt;Visualizzazione degli ordini effettuati e in attesa di preparazione per ciascun tavolo&lt;/li&gt;
      &lt;li&gt;Visualizzazione statistiche su ciascun cameriere e cuoco (numero clienti serviti, piatti realizzati, etc.)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Per oggi direi che è tutto, nel prossimo articolo inizieremo con un veloce design delle interfacce e con la definizione di un set di API in stile RESTful.&lt;/p&gt;</content><author><name></name></author><category term="Italiano" /><category term="Angular" /><category term="Guide" /><summary type="html">In questo articolo non andremo ancora a toccare con mano Angular e mi limiterò nello specifico a spiegare che progetto andremo a realizzare. Anche se è vero che il progetto che svilupperò non è particolarmente complesso, ritengo non sia quasi mai raccomandabile buttarsi a capofitto nello scrivere codice. Un'attenta analisi ci risparmierà di dover riscrivere tutto da capo in seguito!</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/restaurant.jpg" /></entry><entry><title type="html">Realizzare una Single Page Application con Angular e NodeJS</title><link href="http://localhost:4000/realizzare-una-single-page-application-con-angular-e-nodejs/" rel="alternate" type="text/html" title="Realizzare una Single Page Application con Angular e NodeJS" /><published>2019-05-01T08:30:00+02:00</published><updated>2019-05-01T08:30:00+02:00</updated><id>http://localhost:4000/realizzare-una-single-page-application-con-angular-e-nodejs</id><content type="html" xml:base="http://localhost:4000/realizzare-una-single-page-application-con-angular-e-nodejs/">&lt;h2 id=&quot;introduzione&quot;&gt;Introduzione&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://angular.io/&quot;&gt;Angular&lt;/a&gt; (da con confondere con AngularJS) è una delle tecnologie più calde del momento insieme ai suoi cugini React e VueJS per quanto riguarda lo sviluppo web frontend. &lt;br /&gt;
Grazie ad esso possiamo sviluppare applicazioni web anche molto complesse in maniera modulare e utilizzando strumenti di terze parti o scrivendoci interamente da zero tutto il codice ed è per questo che ho deciso di realizzare una piccola e breve guida al suo utilizzo.&lt;/p&gt;

&lt;p&gt;Angular supporta e anzi invita caldamente all’utilizzo di Typescript, un superset di Javascript che introduce numerose funzionalità aggiuntive tra cui come il nome suggerisce un maggiore controllo sui tipi.&lt;br /&gt;
Il framework stesso è  scritto in Typescript!&lt;br /&gt;
Imparare ad utilizzare Angular può inizialmente richiedere un pochino di tempo, soprattutto se non si conoscono Typescript o l’approccio MVC ma posso assicurarvi che vi darà non poche soddisfazioni una volta appreso.&lt;/p&gt;

&lt;h2 id=&quot;la-guida&quot;&gt;La guida&lt;/h2&gt;
&lt;p&gt;Pubblicherò quindi in queste prossime settimane una breve guida su come realizzare una SPA (Single Page Application) con Angular. Il backend verrà realizzato invece con NodeJS in modo tale da rimanere sempre in casa Javascript.&lt;br /&gt;
Questa guida è più una sorta di introduzione alle varie tecnologie ed è scritta da uno studente per chi desidera approcciarsi per la prima volta al mondo di Angular e Node!&lt;br /&gt;
Ci tengo inoltre a sottolineare che non scriverò una guida passo passo ma che darò qualche consiglio su come approcciarsi e su come ho personalmente risolto i vari problemi che mi sono trovato ad affrontare. &lt;br /&gt;
Se state cercando una guida dettagliata, il web ne è già pieno e non ho minimamente la presunzione di poter scrivere qualcosa di altrettanto valido.&lt;br /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Tutto il codice del progetto è disponibile nella seguente &lt;a href=&quot;https://github.com/LucaBozzetto/EasyRestaurant&quot;&gt;repository Github&lt;/a&gt; mentre se desiderate testare l’applicazione senza dover scaricare nulla potete dare un occhiata alla &lt;a href=&quot;https://easyrestaurant-frontend.herokuapp.com/&quot;&gt;versione online&lt;/a&gt; hostata su Heroku.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Qui di seguito lascio la lista con i link agli articoli finora pubblicati in merito alla guida:&lt;br /&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://lucabozzetto.github.io/lapplicazione-easyrestaurant/&quot;&gt;L’applicazione: gestione di un ristorante&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://lucabozzetto.github.io//mockup-interfacce-e-definizione-api/&quot;&gt;Mockup interfacce e definizione API&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><category term="Italiano" /><category term="Angular" /><category term="Guide" /><summary type="html">Angular (da con confondere con AngularJS) è una delle tecnologie più calde del momento insieme ai suoi cugini React e VueJS per quanto riguarda lo sviluppo web frontend. Grazie ad esso possiamo sviluppare applicazioni web anche molto complesse in maniera modulare e utilizzando strumenti di terze parti o scrivendoci interamente da zero tutto il codice ed è per questo che ho deciso di realizzare una piccola e breve guida al suo utilizzo.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/angular.jpg" /></entry><entry><title type="html">Hello World!</title><link href="http://localhost:4000/hello-world/" rel="alternate" type="text/html" title="Hello World!" /><published>2018-10-15T00:30:00+02:00</published><updated>2018-10-15T00:30:00+02:00</updated><id>http://localhost:4000/hello-world</id><content type="html" xml:base="http://localhost:4000/hello-world/">&lt;p&gt;Il titolo giusto per il primo post di questo blog. Credo.&lt;br /&gt;
Non ho al momento in programma di pubblicare articoli con costanza, diciamo che e’ una sorta di progetto a tempo perso.&lt;br /&gt;
Generalmente gli argomenti saranno relativi all’informatica che e’ la mia passione ma potrei pubblicare di tanto in tanto qualcosa di diverso e meno noioso 😛&lt;br /&gt;
Inizialmente volevo scrivere tutti i miei articoli in inglese e poi tradurli in italiano ma temo di non avere il tempo materiale per scrivere lo stesso articolo due volte in due lingue differenti quindi in base all’estro pubblichero’ in una lingua o nell’altra.&lt;br /&gt;
Per chi volesse trovare solo gli articoli in italiano basta cliccare sul tag ‘Italiano’.&lt;br /&gt;
Il tempo vola e solitamente il primo ‘Hello World’ dovrebbe richiedere poco tempo quindi vi lascio in attesa del prossimo post!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;PS: &lt;a href=&quot;http://jekyllrb.com/&quot;&gt;jekyll&lt;/a&gt; e’ davvero ‘na figata, in due secondi ti fai un blog semplice semplice!&lt;/em&gt;&lt;/p&gt;</content><author><name></name></author><category term="Italiano" /><category term="Misc" /><summary type="html">Il titolo giusto per il primo post di questo blog. Credo. Non ho al momento in programma di pubblicare articoli con costanza, diciamo che e’ una sorta di progetto a tempo perso. Generalmente gli argomenti saranno relativi all’informatica che e’ la mia passione ma potrei pubblicare di tanto in tanto qualcosa di diverso e meno noioso 😛 Inizialmente volevo scrivere tutti i miei articoli in inglese e poi tradurli in italiano ma temo di non avere il tempo materiale per scrivere lo stesso articolo due volte in due lingue differenti quindi in base all’estro pubblichero’ in una lingua o nell’altra. Per chi volesse trovare solo gli articoli in italiano basta cliccare sul tag ‘Italiano’. Il tempo vola e solitamente il primo ‘Hello World’ dovrebbe richiedere poco tempo quindi vi lascio in attesa del prossimo post!</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/hello-world.png" /></entry></feed>